// ‡¶è‡¶á ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞ ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ì ‡¶≤‡¶ó‡¶á‡¶® ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡¶ø‡¶§ ‡¶≤‡¶ú‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá‡•§
// - register: ‡¶®‡¶§‡ßÅ‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá
// - login: ‡¶á‡¶Æ‡ßá‡¶á‡¶≤/‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á ‡¶ï‡¶∞‡ßá ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá
// (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ï‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡¶∏) - ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Ø: API ‡¶Ü‡¶ö‡¶∞‡¶£ ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶æ
// üìÅ controllers/authController.js
const User = require('../models/User');
const generateToken = require('../utils/generateToken');

// ‚úÖ ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ API
exports.register = async (req, res) => {
  try {
    const { fullName, email, password, role } = req.body;

    const userExists = await User.findOne({ email });
    if (userExists) return res.status(400).json({ message: '‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá' });

    const user = await User.create({ fullName, email, password, role });
    const token = generateToken(user);

    res.status(201).json({ user, token });
  } catch (error) {
    res.status(500).json({ message: '‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá' });
  }
};

// ‚úÖ ‡¶≤‡¶ó‡¶á‡¶® API (optional: role validation)
exports.login = async (req, res) => {
  try {
    const { email, password, role: requestedRole } = req.body;

    const user = await User.findOne({ email });
    if (!user) return res.status(404).json({ message: '‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø' });

    const isMatch = await user.matchPassword(password);
    if (!isMatch) return res.status(401).json({ message: '‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡¶Ø‡¶º' });

    // ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡ßü‡ßá‡¶®‡ßç‡¶ü role ‡¶™‡¶æ‡¶†‡¶æ‡ßü, ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡¶ø ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ role ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶ø‡¶≤‡ßá
    if (requestedRole && user.role !== requestedRole) {
      return res.status(403).json({ message: '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∞‡ßã‡¶≤ ‡¶Ö‡¶®‡ßÅ‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§ ‡¶¨‡¶æ ‡¶Æ‡¶ø‡¶≤ ‡¶®‡ßá‡¶á' });
    }

    const token = generateToken(user);
    res.json({ user, token });
  } catch (error) {
    res.status(500).json({ message: '‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá' });
  }
};
