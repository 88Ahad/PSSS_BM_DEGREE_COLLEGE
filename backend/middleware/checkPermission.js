// ржПржЗ ржорж┐ржбрж▓ржУржпрж╝рзНржпрж╛рж░ржЯрж┐ рж░рж┐ржХрзБржпрж╝рзЗрж╕рзНржЯрзЗ ржерж╛ржХрж╛ `req.user` ржерзЗржХрзЗ ржкрж╛рж░ржорж┐рж╢ржи ржЪрзЗржХ ржХрж░рзЗред
// ржмрзНржпржмрж╣рж╛рж░: router.get('/x', protect, checkPermission('perm:name'), handler)
// ржпржжрж┐ ржЗржЙржЬрж╛рж░рзЗрж░ ржкрж╛рж░ржорж┐рж╢ржи ржирж╛ ржерж╛ржХрзЗ, 403 рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗред
// (ржмрж╛ржВрж▓рж╛ ржХржорзЗржирзНржЯрж╕) - рж▓ржХрзНрж╖рзНржп: рж░рзЛрж▓/ржкрж╛рж░ржорж┐рж╢ржи ржпрж╛ржЪрж╛ржЗ рж╕рзНржерж╛ржирзЗ ржХрж░рж╛
// ЁЯУБ middleware/checkPermission.js
// ЁЯФР рж░рж┐ржХрзБржпрж╝рзЗрж╕рзНржЯрзЗ ржкрж╛рж░ржорж┐рж╢ржи ржЪрзЗржХ ржХрж░рж╛рж░ ржЬржирзНржп ржорж┐ржбрж▓ржУржпрж╝рзНржпрж╛рж░
module.exports = (requiredPermission) => {
  return async (req, res, next) => {
    const user = req.user; // ЁЯФН JWT ржерзЗржХрзЗ ржЗржЙржЬрж╛рж░ ржкрж╛ржУржпрж╝рж╛

    // Null-safe checks: user ржПржмржВ permissions ржЕрзНржпрж╛рж░рзЗ ржпрж╛ржЪрж╛ржЗ
    if (!user) {
      return res.status(401).json({ message: 'ржЯрзЛржХрзЗржи ржмрж╛ ржЗржЙржЬрж╛рж░ рждржерзНржп ржЕржирзБржкрж╕рзНржерж┐ржд' });
    }

    const permissions = user.permissions;
    if (!Array.isArray(permissions) || !permissions.includes(requiredPermission)) {
      return res.status(403).json({ message: 'тЫФ ржЕржирзБржорждрж┐ ржирзЗржЗ' });
    }

    next(); // тЬЕ ржЕржирзБржорждрж┐ ржерж╛ржХрж▓рзЗ ржкрж░ржмрж░рзНрждрзА рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░рзЗ ржпрж╛ржУржпрж╝рж╛
  };
};
